@model IEnumerable<crudapp.ViewModel.UsersDepartmentViewModel>

@{
    ViewBag.Title = "List";
}

<h2>List of Users</h2>

@Html.Raw(TempData["InsertMsg"])
@Html.Raw(TempData["DeleteMsg"])
@Html.Raw(TempData["UpdateMsg"])

@using (Html.BeginForm("List", "User", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="form-group">
        @Html.Label("User Name:", new { @class = "sr-only" })
        @Html.TextBox("userName", null, new { @class = "form-control", placeholder = "User Name" })
    </div>

    <div class="form-group">
        @Html.Label("Email:", new { @class = "sr-only" })
        @Html.TextBox("email", null, new { @class = "form-control", placeholder = "Email" })
    </div>

    <div class="form-group">
        @Html.Label("Department:", new { @class = "sr-only" })
        @Html.DropDownList("deptId", ViewBag.Departments as SelectList, "Select Department", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
    <span id="totalUsers"></span>
}
<br />

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p>
    @Html.ActionLink("View Report", "Report")
</p>
<table class="table">
    <tr>
        <th>SL No</th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        @*        <th>
                @Html.DisplayNameFor(model => model.DeptId)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.DeptName)
        </th>
        <th></th>
    </tr>
    @{
        var c = 0;
    }
    @foreach (var item in Model)
    {
        c++;
        <tr>
            <td>@c</td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            @*        <td>
                    @Html.DisplayFor(modelItem => item.DeptId)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.DeptName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { onclick = "return confirm('Are you sure to delete this record?')" })
            </td>
        </tr>
    }


</table>


@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>*@
<script>
    $(document).ready(function () {
        // Get the value of c from the Razor variable
        var totalUsers = @c;

        // Update the content of the span element with the totalUsers value
        $('#totalUsers').html('<b>Total Users: ' + totalUsers + '</b>');
    });
</script>

